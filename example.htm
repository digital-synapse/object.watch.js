<html>
<head></head>
<body onload="onload()">

<pre id='console'>
</pre>

<script src="object.watch.js"></script>
<script>
    var console = function () {
        return ({
            log: function (msg) {
                consoleDiv = document.getElementById('console');
                text = document.createTextNode(msg + '\n');
                consoleDiv.appendChild(text);
            }
        });
    } ();

    /**************************************** test **************************************/
    function onload() {

        var someobject = {
            a: 1,
            b: 2.2,
            c: 'c',
            d: { x: 1 },
            e: [0],
            super_nested: { a: { b: { c: { d: { e: { f: { g: [0, { h: 0 }, 2]}}}}}} }
        };
        var watchCallback = function (prop) {
            console.log('[' + prop + '] changed to ' + this[prop]);
        };

        console.log("object.watch no traversal:\n");
        someobject.watch(watchCallback);

        someobject.c=9;  // triggers callback
        someobject.e[0] =9; // does not trigger callback (array watch disabled by default)
        someobject.d.x=9;  // does not trigger (nested object watch disabled by default)

        console.log("\nobject.watch nested object:\n");
        someobject.watch(watchCallback, {
            depth:-1,
            traverseArrays:true,
            watchArrays:true,
            watchProps:true
        });

        someobject.b = 2.2; // no change
        someobject.a = 0;
        someobject.b = 'b';
        someobject.c = 3;
        someobject.d.x = 2;
        someobject.e[0] = 3;
        someobject.super_nested.a.b.c.d.e.f.g[1].h += 1;

        console.log("\nobject.watch single property:\n");

        someobject.watch(watchCallback, {
            toWatch: 'a',
            depth:0
        });

        someobject.a = 5;
    };
</script>
</body>
</html>
